<?php

/**
 * @file
 * API that determines the time zone based on geo location (coordinates or
 * region or country). Using "geotimezone_query($location, $format);" that
 * returns time zone identifier or UTC/GMT offset or both (depends on $format
 * value). Where the first parameter is an associative array with array keys of:
 * longitude
 * latitude
 * region
 * country
 * The coordinates (longitude/latitude) are the query's priority if present.
 * The region is the next query's priority if coordinates are not present.
 * The country is the last priority if coordinates and region are not present.
 * Most accurate to return a time zone if coordinates are provided, next is the
 * region and the least is the country where it may return multiple time zones
 * in array.
 *
 * This module does not need web services, data files or SQL database. This is a
 * Drupal version of LatLongToTimezone project
 * (https://github.com/drtimcooper/LatLongToTimezone)
 *
 * @author Roland Michael dela PeÃ±a.
 */


/**
 * Query time zone based on coordinates.
 *
 * @param float $latitude
 *   Latitude.
 * @param float $longitude
 *   Longitude.
 * @param string $format
 *   Desired return time zone format: 'identifier', 'offset' or 'both'
 * @return mixed
 *   Query result contains time zone identifier or offset or both.
 */
function geotimezone_query($latitude, $longitude, $format = 'both') {
  module_load_include('php', 'geotimezone', 'src/Timezone');
  module_load_include('php', 'geotimezone', 'src/TimezonePolygon');
  module_load_include('php', 'geotimezone', 'src/GeoTimezone');

  $geotimezone = new \Drupal\geotimezone\GeoTimezone($latitude, $longitude);
  if ($format == 'identifier') {
    return $geotimezone->getIdentifier();
  }
  elseif ($format == 'offset') {
    return $geotimezone->getOffset();
  }
  else {
    return [
      'identifier' => $geotimezone->getIdentifier(),
      'offset'     => $geotimezone->getOffset(),
    ];
  }
}
